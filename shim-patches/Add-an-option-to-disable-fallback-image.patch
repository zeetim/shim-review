From 88fbaf63d437e476e50566e3dfb4af447e4a4d96 Mon Sep 17 00:00:00 2001
From: Guillaume Chaye <guillaume.chaye@zeetim.com>
Date: Wed, 20 Aug 2025 12:59:28 +0200
Subject: [PATCH] Add an option to disable fallback image

Signed-off-by: Guillaume Chaye <guillaume.chaye@zeetim.com>
---
 Makefile | 11 ++++++++---
 shim.c   |  6 ++++++
 2 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/Makefile b/Makefile
index 3d2272d..34d7268 100644
--- a/Makefile
+++ b/Makefile
@@ -25,7 +25,7 @@ include $(TOPDIR)/include/scan-build.mk
 include $(TOPDIR)/include/fanalyzer.mk
 
 TARGETS	= $(SHIMNAME)
-TARGETS += $(SHIMNAME).debug $(MMNAME).debug $(FBNAME).debug
+TARGETS += $(SHIMNAME).debug $(MMNAME).debug $(if $(DISABLE_FALLBACK),,$(FBNAME).debug)
 ifneq ($(origin ENABLE_SHIM_HASH),undefined)
 TARGETS += $(SHIMHASHNAME)
 endif
@@ -33,10 +33,10 @@ ifneq ($(origin ENABLE_SHIM_DEVEL),undefined)
 CFLAGS += -DENABLE_SHIM_DEVEL
 endif
 ifneq ($(origin ENABLE_SHIM_CERT),undefined)
-TARGETS	+= $(MMNAME).signed $(FBNAME).signed
+TARGETS	+= $(MMNAME).signed $(if $(DISABLE_FALLBACK),,$(FBNAME).signed)
 CFLAGS += -DENABLE_SHIM_CERT
 else
-TARGETS += $(MMNAME) $(FBNAME)
+TARGETS += $(MMNAME) $(if $(DISABLE_FALLBACK),,$(FBNAME))
 endif
 OBJS	= shim.o globals.o memattrs.o mok.o netboot.o cert.o dp.o loader-proto.o tpm.o version.o errlog.o sbat.o sbat_data.o sbat_var.o pe.o pe-relocate.o httpboot.o csv.o load-options.o utils.o verify.o
 KEYS	= shim_cert.h ocsp.* ca.* shim.crt shim.csr shim.p12 shim.pem shim.key shim.cer
@@ -57,6 +57,11 @@ SOURCES = $(foreach source,$(ORIG_SOURCES),$(TOPDIR)/$(source)) version.c
 MOK_SOURCES = $(foreach source,$(ORIG_MOK_SOURCES),$(TOPDIR)/$(source))
 FALLBACK_SRCS = $(foreach source,$(ORIG_FALLBACK_SRCS),$(TOPDIR)/$(source))
 
+ifneq ($(origin DISABLE_FALLBACK),undefined)
+$(warning Building shim without fallback image support)
+CFLAGS += -DDISABLE_FALLBACK
+endif
+
 ifneq ($(origin FALLBACK_VERBOSE), undefined)
 	CFLAGS += -DFALLBACK_VERBOSE
 endif
diff --git a/shim.c b/shim.c
index b62042e..48eeccb 100644
--- a/shim.c
+++ b/shim.c
@@ -79,6 +79,7 @@ BOOLEAN secure_mode (void)
 	return TRUE;
 }
 
+#ifndef DISABLE_FALLBACK
 static int
 should_use_fallback(EFI_HANDLE image_handle)
 {
@@ -135,6 +136,7 @@ error:
 
 	return ret;
 }
+#endif
 /*
  * Open the second stage bootloader and read it into a buffer
  */
@@ -436,7 +438,11 @@ done:
 EFI_STATUS init_grub(EFI_HANDLE image_handle)
 {
 	EFI_STATUS efi_status;
+#ifndef DISABLE_FALLBACK
 	int use_fb = should_use_fallback(image_handle);
+#else
+	int use_fb = 0;
+#endif
 
 	efi_status = start_image(image_handle, use_fb ? FALLBACK :second_stage);
 	if (efi_status == EFI_SECURITY_VIOLATION ||
-- 
2.47.2

